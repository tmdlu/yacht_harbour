@page "/Account/Info"

@using yacht_harbour.Data
@using DataBaseAccess.Models

@inject NavigationManager NavigationManager


@inject Repository.Services.AccountManagmentService accountService
@inject Repository.Services.PowerService powerService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<h3>Dane konta</h3>
<hr>


@if (accountFront is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="flex-item2">
        <h3></h3>
        <EditForm class="box-shadow" Model="@accountFront">
            <div>
             
        <div class="outer_container">
                <div class="row">
                    
                    <div class="flex-md-column mx-auto"><p><strong>Imię:</strong></p><p>@accountFront.Name </p></div>
                     <div class="flex-md-column mx-auto"><p><strong>Nazwisko:</strong></p><p>@accountFront.Surname </p></div>
                </div>
                <br />

                <div class="row">  
                   
                    <div class="flex-md-column mx-auto"><p><strong>E-Mail:</strong></p><p>@accountFront.Email </p></div>
                    <div class="flex-md-column mx-auto"><p><strong>Telefon:</strong></p><p>@accountFront.PhoneNumber </p></div>
                </div>
                <br />

                <div class="row">
                    <div class="flex-md-column mx-auto"><p><strong>Rola:</strong></p><p>@accountFront.Role </p></div>
                    
                </div>
                <br />
                <div class="row">
                         <div class="flex-md-column mx-auto"><p><strong>Uprawnienia:</strong></p></div>
                @foreach(Power power in accountPowers)
                {
                      <div class="flex-md-column mx-auto"><p>@power.PowerName </p></div>  
                    }
              </div>
                <br />

             </div>
            </div>


            <DataAnnotationsValidator />
            <ValidationSummary />

            <br />
            <center>
            <button type="button" class="btn btn-primary" @onclick="goToUserDataEditing">Edytuj dane</button>
            </center>
            
        </EditForm>
    </div>

}

@if (wasException)
{
    <center>
        <hr>
        <p style="color:rgb(255,51,51)">@error</p>
    </center>
}

@code
{

    private Models.AccountFront accountFront;

    private string error;
    private bool wasException;
    private List<Power> accountPowers = new List<Power>();
    protected override async Task OnParametersSetAsync()
    {
        wasException = false;
        try
        {
            await initAccountData();


        }
        catch (Exception e)
        {
            error = e.Message;
            wasException = true;
        }
    }

    private async Task initAccountData()
    {

        var dbUser = await accountService.GetAccountByEmailAndPassword(await sessionStorage.GetItemAsStringAsync("email"), await sessionStorage.GetItemAsStringAsync("password"));
        accountFront = new Models.AccountFront()
            {
                IdAccount = dbUser.IdAccount,
                Email = dbUser.Email,
                Password = dbUser.Password,
                Name = dbUser.Name,
                Surname = dbUser.Surname,
                PhoneNumber = dbUser.PhoneNumber,
                Role = dbUser.Role,

            };
        accountPowers = await powerService.GetUsersPowers(dbUser.IdAccount);

       


    }

    

    private void goToUserDataEditing()
    {
        NavigationManager.NavigateTo("/Account/Info/Edit");
    }

}
